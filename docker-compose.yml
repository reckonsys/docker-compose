version: '3'

volumes:
  pg_data: {}
  rabbitmq_data: {}
  traefik_acme: {}

services:

  backend: &backend
    restart: always
    build: ./backend
    expose:
      - "8000"
    links:
      - postgres:postgres
      - rabbitmq:rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:foo.reckonsys.xyz"
    env_file: .env
    command: gunicorn -b :5000 wsgi:app

  worker:
    <<: *backend
    # command: /start-worker
    command: gunicorn -b :8000 wsgi:app

#  traefik:
#    image: traefik
#    command: --api --docker
#    env_file: .env
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      # - traefik_toml:/traefik.toml
#      # - traefik_acme:/etc/traefik/acme/acme.json
#    build: ./traefik
#    depends_on:
#      - backend
#    ports:
#      - "80"
#      - "443"
#        # - "0.0.0.0:443:443"

  traefik:
    build: 'traefik'
    #   context: .
    #   dockerfile: ./traefik/Dockerfile
    image: traefik
    depends_on:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file: .env
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"


  postgres:
    restart: always
    image: postgres:latest
    ports:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/

  rabbitmq:
    restart: always
    image: rabbitmq:latest
    ports:
      - "5672"
    volumes:
      - rabbitmq_data:/data
